version: '3.7'

services:
  app:
    image: janbinkowski96/accs-app
    build: .
    restart: always
    networks:
      - app_network
    volumes:
      - ./accs_app:/app/
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    depends_on:
      - redis
      - postgres
    env_file:
      .env

  redis:
    image: redis:latest
    restart: on-failure
    command: redis-server --requirepass ${REDIS_PASS}
    networks:
      - app_network

  postgres:
    image: postgres:latest
    restart: on-failure
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    networks:
      - app_network
    volumes:
      - postgres_data:/var/lib/postgresql/data

  nginx:
    image: nginx:latest
    restart: on-failure
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles

    depends_on:
      - app
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
  static_volume:
  media_volume: