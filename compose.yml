services:
  app:
    build:
      context: .
      dockerfile: images/app/Dockerfile
      args:
        UID: 1001
        GID: 1001
    restart: always
    networks:
      - app_network
    volumes:
      - ./accs_app:/ACCS/accs_app/
      - media_volume:/ACCS/accs_app/mediafiles/
      - static_volume:/ACCS/accs_app/staticfiles/
    depends_on:
      - nginx
      - celery_worker
      - redis
      - db
    env_file:
      .env

  celery_worker:
    image: janbinkowski96/accs-celery-worker
    build:
      context: .
      dockerfile: images/celery_worker/Dockerfile
      args:
        UID: 1001
        GID: 1001
    networks:
      - app_network
    volumes:
      - ./accs_app:/ACCS/accs_app/
      - media_volume:/ACCS/accs_app/mediafiles/
    depends_on:
      - redis
    env_file:
      - .env

  redis:
    image: redis:latest
    restart: on-failure
    command: redis-server --requirepass ${REDIS_PASS}
    networks:
      - app_network

  flower:
    image: mher/flower
    restart: on-failure
    command: celery --broker=redis://:${REDIS_PASS}@${REDIS_HOST}:${REDIS_PORT}/0 flower --basic-auth="${FLOWER_USER}":"${FLOWER_PASS}" --port=${FLOWER_PORT} --url_prefix=${FLOWER_ENDPOINT}
    depends_on:
      - redis
      - celery_worker
      - nginx
    networks:
      - app_network
    env_file:
      - .env

  db:
    image: postgres:latest
    restart: on-failure
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    networks:
      - app_network
    volumes:
      - postgres_data:/var/lib/postgresql/data

  nginx:
    image: nginx:latest
    restart: on-failure
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/cert/:/etc/ssl/certs/
      - ./nginx/logs/:/var/log/nginx/
      - static_volume:/ACCS/accs_app/staticfiles/
      - media_volume:/ACCS/accs_app/mediafiles/
    networks:
      - app_network
    env_file:
      - .env

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
  static_volume:
  media_volume:
