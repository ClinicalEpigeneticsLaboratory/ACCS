# Generated by Django 5.1.4 on 2024-12-29 22:31

import app.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import tinymce.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('django_celery_results', '0011_taskresult_periodic_task_name'),
        ('models_collection', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Document',
            fields=[
                ('name', models.SlugField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('content', tinymce.models.HTMLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('sample_name', models.CharField(max_length=50)),
                ('diagnosis', models.CharField(max_length=50)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('sex', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=7, null=True)),
                ('grn_idat', models.FileField(upload_to=app.models.Sample.file_path, validators=[django.core.validators.RegexValidator('.*_Grn.idat*', 'Expected file suffix is _Grn.idat or _Grn.idat.gz', 'iDAT error')])),
                ('red_idat', models.FileField(upload_to=app.models.Sample.file_path, validators=[django.core.validators.RegexValidator('.*_Red.idat*', 'Expected file suffix is _Red.idat or _Red.idat.gz', 'iDAT error')])),
                ('model', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='models_collection.modelinstance')),
                ('task', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='django_celery_results.taskresult')),
            ],
        ),
    ]
